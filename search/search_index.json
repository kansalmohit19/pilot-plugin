{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pilot Plugin - A Simple Project Template","text":"<p>This is a Pilot Plugin project. It provides basic functionality and serves as a placeholder for demonstrating structure and usage. The goal is to showcase how a library can be organized, documented, and extended with future features.</p> <p>See the <code>license</code> file.</p>"},{"location":"license/","title":"License","text":"<p>Copyright (c) 2025, MohitKansal All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ul> <li>Redistributions of source code must retain the above copyright notice,   this list of conditions and the following disclaimer.</li> <li>Redistributions in binary form must reproduce the above copyright notice,   this list of conditions and the following disclaimer in the documentation   and/or other materials provided with the distribution.</li> <li>Neither the name of the MohitKansal nor the names of its contributors may   be used to endorse or promote products derived from this software without   specific prior written permission.</li> </ul> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"git-version/","title":"Git Version Plugin","text":"<p>A lightweight Gradle plugin that automatically generates code and name directly from your Git history. Perfect for Android projects and any build setup where you want Git-driven versioning.</p>"},{"location":"git-version/#features","title":"Features","text":"<ul> <li>code \u2192 Derived from the total number of Git commits (<code>git rev-list --count HEAD</code>).</li> <li>name \u2192 Dynamically generated (based on tags or commit count).</li> <li>Zero config \u2192 Just apply the plugin and use the values.</li> <li>Safe defaults \u2192 Falls back gracefully if Git is not available.</li> </ul>"},{"location":"git-version/#if-you-like-this-plugin-dont-forget-to-star-the-repo","title":"If you like this plugin, don\u2019t forget to star the repo!","text":""},{"location":"git-version/license/","title":"License","text":"<p>Copyright (c) 2025, MohitKansal All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ul> <li>Redistributions of source code must retain the above copyright notice,   this list of conditions and the following disclaimer.</li> <li>Redistributions in binary form must reproduce the above copyright notice,   this list of conditions and the following disclaimer in the documentation   and/or other materials provided with the distribution.</li> <li>Neither the name of the MohitKansal nor the names of its contributors may   be used to endorse or promote products derived from this software without   specific prior written permission.</li> </ul> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"git-version/publishing/","title":"Git Version Plugin Publishing","text":"<p>This guide explains how to publish the Git Version Plugin either to Maven Local (for testing) or to the Gradle Plugin Portal (for distribution).</p>"},{"location":"git-version/publishing/#setup-gradle-plugin-portal-credentials","title":"Setup Gradle Plugin Portal Credentials","text":"<p>You need to provide your Gradle Plugin Portal API keys. Add the following inside your <code>~/.gradle/gradle.properties</code> file (machine-wide, not in the project repo):</p> <pre><code>gradle.publish.key=YOUR_KEY\ngradle.publish.secret=YOUR_SECRET\n</code></pre> <p>Replace YOUR_KEY and YOUR_SECRET with the values you can get these keys from your Gradle Plugin Portal account.</p>"},{"location":"git-version/publishing/#publishing-tasks","title":"Publishing Tasks","text":"<p>1. Publish to Maven Local (for testing)</p> <pre><code>./gradlew publishToMavenLocal\n</code></pre> <p>This will install the plugin into your local Maven repository (usually ~/.m2/repository). You can then use it in a sample project with:</p> <pre><code>plugins {\n    id(\"io.github.kansalmohit19.git-version\") version \"X.Y.Z\"\n}\n</code></pre> <p>and add:</p> <pre><code>pluginManagement {\n    repositories {\n        mavenLocal()\n        gradlePluginPortal()\n    }\n}\n</code></pre> <p>2. Publish to Gradle Plugin Portal</p> <pre><code>./gradlew publishPlugins\n</code></pre> <p>This uploads the plugin to the official Gradle Plugin Portal. Once published, others can use it with:</p> <pre><code>plugins {\n    id(\"io.github.kansalmohit19.git-version\") version \"X.Y.Z\"\n}\n</code></pre>"},{"location":"git-version/usage/","title":"Usage","text":""},{"location":"git-version/usage/#installation","title":"Installation","text":"<p>Add the plugin to your <code>plugins</code> block in module build.gradle.kts or in the root build.gradle.kts:</p> <pre><code>plugins {\n    id(\"io.github.kansalmohit19.git-version\") version \"X.Y.Z\"\n}\n</code></pre>"},{"location":"git-version/usage/#usage","title":"Usage","text":""},{"location":"git-version/usage/#1-android-example","title":"1. Android example","text":"<pre><code>android {\n    defaultConfig {\n        versionCode = gitVersion.code.get()\n        versionName = gitVersion.name.get()\n    }\n}\n</code></pre>"},{"location":"git-version/usage/#2-custom-task-example","title":"2. Custom task example","text":"<pre><code>tasks.register(\"generateGitVersion\") {\n    doLast {\n        println(\"App Version \u2192 Code=${gitVersion.code.get()}, Name=${gitVersion.name.get()}\")\n    }\n}\n</code></pre>"},{"location":"git-version/usage/#example-output","title":"Example Output","text":"<pre><code>./gradlew printGitVersion\n\nGitVersion: code=38, name=3.8\n</code></pre>"},{"location":"ktext/","title":"KText Plugin","text":"<p>A lightweight Gradle plugin for validating and managing translations across multiple languages and modules in your project. Supports JSON and <code>strings.xml</code> files to ensure all keys are consistent between languages.</p>"},{"location":"ktext/#features","title":"Features","text":"<ul> <li>Cross-language validation \u2192 Detect missing keys/values between source and target translation files (e.g., <code>en.json</code> vs <code>hi.json</code>).</li> <li>Multi-format support \u2192 Works with JSON and Android <code>strings.xml</code>.</li> <li>Multi-module friendly \u2192 Aggregate translation validation across modules.</li> <li>Configurable \u2192 Easily point to your translation files in the Gradle build.</li> <li>Safe defaults \u2192 Skips validation gracefully if files are missing.</li> </ul>"},{"location":"ktext/#if-you-like-this-plugin-dont-forget-to-star-the-repo","title":"If you like this plugin, don\u2019t forget to star the repo!","text":""},{"location":"ktext/license/","title":"License","text":"<p>Copyright (c) 2025, MohitKansal All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ul> <li>Redistributions of source code must retain the above copyright notice,   this list of conditions and the following disclaimer.</li> <li>Redistributions in binary form must reproduce the above copyright notice,   this list of conditions and the following disclaimer in the documentation   and/or other materials provided with the distribution.</li> <li>Neither the name of the MohitKansal nor the names of its contributors may   be used to endorse or promote products derived from this software without   specific prior written permission.</li> </ul> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"ktext/publishing/","title":"KText Plugin Publishing","text":"<p>This guide explains how to publish the KText Plugin either to Maven Local (for testing) or to the Gradle Plugin Portal (for distribution).</p>"},{"location":"ktext/publishing/#setup-gradle-plugin-portal-credentials","title":"Setup Gradle Plugin Portal Credentials","text":"<p>You need to provide your Gradle Plugin Portal API keys. Add the following inside your <code>~/.gradle/gradle.properties</code> file (machine-wide, not in the project repo):</p> <pre><code>gradle.publish.key=YOUR_KEY\ngradle.publish.secret=YOUR_SECRET\n</code></pre> <p>Replace YOUR_KEY and YOUR_SECRET with the values you can get these keys from your Gradle Plugin Portal account.</p>"},{"location":"ktext/publishing/#publishing-tasks","title":"Publishing Tasks","text":"<p>1. Publish to Maven Local (for testing)</p> <pre><code>./gradlew publishToMavenLocal\n</code></pre> <p>This will install the plugin into your local Maven repository (usually ~/.m2/repository). You can then use it in a sample project with:</p> <pre><code>plugins {\n    id(\"io.github.kansalmohit19.ktext\") version \"X.Y.Z\"\n}\n</code></pre> <p>and add:</p> <pre><code>pluginManagement {\n    repositories {\n        mavenLocal()\n        gradlePluginPortal()\n    }\n}\n</code></pre> <p>2. Publish to Gradle Plugin Portal</p> <pre><code>./gradlew publishPlugins\n</code></pre> <p>This uploads the plugin to the official Gradle Plugin Portal. Once published, others can use it with:</p> <pre><code>plugins {\n    id(\"io.github.kansalmohit19.ktext\") version \"X.Y.Z\"\n}\n</code></pre>"},{"location":"ktext/usage/","title":"Usage","text":""},{"location":"ktext/usage/#installation","title":"Installation","text":"<p>Add the plugin to your <code>plugins</code> block in module build.gradle.kts or in the root build.gradle.kts:</p> <pre><code>plugins {\n    id(\"io.github.kansalmohit19.ktext\") version \"X.Y.Z\"\n}\n</code></pre>"},{"location":"ktext/usage/#usage","title":"Usage","text":""},{"location":"ktext/usage/#android-example","title":"Android example","text":"<p>In your <code>build.gradle.kts</code>:</p> <pre><code>plugins {\n    id(\"io.github.kansalmohit19.ktext\") version \"X.Y.Z\"\n}\n\nktext {\n    baseFile.setFrom(project.rootProject.file(\"resources/translations.en.json\"))\n    translationFiles.setFrom(\n        project.rootProject.file(\"resources/translations.hi.json\"),\n        project.rootProject.file(\"resources/translations.es.json\")\n    )\n}\n</code></pre>"},{"location":"ktext/usage/#example-output","title":"Example Output","text":"<pre><code>./gradlew validateTranslations\n\ntranslations.es.json: Validating file\ntranslations.es.json: Missing keys [login]\ntranslations.es.json: Empty translations [signup]\n\n./gradlew generateTranslations\n\n&gt; Task :androidApp:generateTranslations\ntranslations.es.json: Generating Translations\ntranslations.es.json: Translations Generated\n</code></pre>"}]}